/* eslint-disable */
export default async () => {
    const t = {
        ["./borrowing/borrowing.entity"]: await import("./borrowing/borrowing.entity"),
        ["./borrowing/borrowing-status"]: await import("./borrowing/borrowing-status"),
        ["./books/book.entity"]: await import("./books/book.entity"),
        ["./users/user.entity"]: await import("./users/user.entity"),
        ["./users/user-role"]: await import("./users/user-role"),
        ["./users/user-status"]: await import("./users/user-status"),
        ["./transactions/transaction.entity"]: await import("./transactions/transaction.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./books/book.entity"), { "Book": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, author: { required: true, type: () => String }, isbn: { required: true, type: () => String }, amount: { required: true, type: () => Number }, borrowings: { required: false, type: () => [t["./borrowing/borrowing.entity"].Borrowing] } } }], [import("./borrowing/borrowing.entity"), { "Borrowing": { id: { required: true, type: () => Number }, bookId: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, borrowingDate: { required: true, type: () => Date }, dueDate: { required: true, type: () => Date }, returnDate: { required: false, type: () => Date }, status: { required: true, enum: t["./borrowing/borrowing-status"].BorrowingStatus }, book: { required: false, type: () => t["./books/book.entity"].Book }, user: { required: false, type: () => t["./users/user.entity"].User }, updatedAt: { required: true, type: () => Date } } }], [import("./users/user.entity"), { "User": { id: { required: true, type: () => Number }, role: { required: true, enum: t["./users/user-role"].UserRole }, externalId: { required: true, type: () => String }, email: { required: true, type: () => String }, credit: { required: true, type: () => Number }, status: { required: true, enum: t["./users/user-status"].UserStatus }, borrowings: { required: false, type: () => [t["./borrowing/borrowing.entity"].Borrowing] }, transactions: { required: false, type: () => [t["./transactions/transaction.entity"].Transaction] }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./transactions/transaction.entity"), { "Transaction": { id: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, reference: { required: true, type: () => String }, user: { required: false, type: () => t["./users/user.entity"].User }, createdAt: { required: true, type: () => Date } } }], [import("./users/dto/base-user.dto"), { "BaseUser": { id: { required: true, type: () => Number, minimum: 1 } } }], [import("./users/dto/credit-user.dto"), { "CreditUserDto": { amount: { required: true, type: () => Number, minimum: 1 } } }], [import("./users/dto/update-user.dto"), { "UpdateUserDto": { email: { required: false, type: () => String }, status: { required: false, enum: t["./users/user-status"].UserStatus } } }], [import("./books/dto/create-book.dto"), { "CreateBookDto": { title: { required: true, type: () => String }, author: { required: true, type: () => String }, isbn: { required: true, type: () => String }, amount: { required: true, type: () => Number, maximum: 100, minimum: 1 } } }], [import("./books/dto/update-book.dto"), { "UpdateBookDto": { id: { required: true, type: () => Number, minimum: 1 } } }], [import("./borrowing/dto/borrow-book.dto"), { "BorrowBookDto": { bookId: { required: true, type: () => Number, minimum: 1 } } }], [import("./borrowing/dto/return-book.dto"), { "ReturnBookDto": {} }]], "controllers": [[import("./users/users.controller"), { "UsersController": { "getSelf": { type: t["./users/user.entity"].User }, "getUsers": { type: [t["./users/user.entity"].User] }, "updateUser": { type: t["./users/user.entity"].User }, "creditUser": {} } }], [import("./books/books.controller"), { "BooksController": { "getBooks": { type: [t["./books/book.entity"].Book] }, "createBook": { type: Object }, "updateBook": { type: t["./books/book.entity"].Book }, "deleteBook": { type: t["./books/book.entity"].Book } } }], [import("./borrowing/borrowing.controller"), { "BorrowingController": { "borrowBook": { type: t["./borrowing/borrowing.entity"].Borrowing }, "returnBook": { type: t["./borrowing/borrowing.entity"].Borrowing }, "scanOutstandingBooks": {} } }], [import("./dev/dev.controller"), { "DevController": { "reset": {}, "seed": {}, "login": {} } }]] } };
};